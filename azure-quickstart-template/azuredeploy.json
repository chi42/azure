{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceNamePrefix": {
      "type": "string",
      "defaultValue": "altus-quickstart",
      "metadata": {
        "description": "Prefix for resource names"
      }
    },
    "dnsPrivateZoneName": {
      "type": "string",
      "defaultValue": "altus.quickstart",
      "metadata": {
        "description": "DNS private zone name"
        }
    },
    "networkAddressSpace": {
      "type": "string",
      "defaultValue": "10.3.0.0/24",
      "metadata": {
        "description": "Virtual Network address space"
      }
    },
    "allowPublicIps": {
      "type": "string",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "defaultValue": "No",
      "metadata": {
        "description": "Add security rules to allow public IPs for created VMs"
      }
    }

  },
  "variables": {
    "contentVersion": "1.0.0.0",
    "typeHandlerVersion": "2.0",
    "resourceAPIVersions": {
      "templateAPIVersion": "2017-05-10",
      "virtualNetworks": "2017-06-01",
      "networkSecurityGroups": "2017-06-01",
      "dnsZones": "2017-10-01",
      "userAssignedIdentities": "2015-08-31-PREVIEW"
    },
    "location": "[resourceGroup().location]",
    "scriptsUri": "https://raw.githubusercontent.com/chi42/azure/master/azure-quickstart-template",
    "updateNsgUri": "[concat(variables('scriptsUri'), '/updateNsg.json')]",
    "names": {
      "networkSecurityGroup": "[concat(parameters('resourceNamePrefix'), '-nsg')]",
      "virtualNetwork": "[concat(parameters('resourceNamePrefix'), '-vnet')]",
      "virtualNetworkSubnet": "default",
      "dnsZone": "[parameters('dnsPrivateZoneName')]",
      "userAssignedIdentity": "[concat(parameters('resourceNamePrefix'), '-ua-msi')]",
      "updateNsg": "updateNsg"
    }
  },
  "resources": [
    {
      "apiVersion": "[variables('resourceAPIVersions').networkSecurityGroups]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('names').networkSecurityGroup]",
      "location": "[variables('location')]"
    },
    {
      "apiVersion": "[variables('resourceAPIVersions').virtualNetworks]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('names').virtualNetwork]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('networkAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('names').virtualNetworkSubnet]",
            "properties": {
              "addressPrefix": "[parameters('networkAddressSpace')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('resourceAPIVersions').dnsZones]",
      "type": "Microsoft.Network/dnszones",
      "name": "[variables('names').dnsZone]",
      "location": "global",
      "dependsOn": ["[concat('Microsoft.Network/virtualNetworks/', variables('names').virtualNetwork)]"],
      "properties": {
        "zoneType": "Private",
        "registrationVirtualNetworks": [
          {
            "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('names').virtualNetwork)]"
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('resourceAPIVersions').userAssignedIdentities]",
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('names').userAssignedIdentity]",
      "location": "[variables('location')]"
    },
    {
      "condition": "[equals(parameters('allowPublicIPs'), 'Yes')]",
      "apiVersion": "[variables('resourceAPIVersions').templateAPIVersion]",
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('names').updateNsg]",
      "dependsOn": ["[concat('Microsoft.Network/networkSecurityGroups/', variables('names').networkSecurityGroup)]"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('updateNsgUri')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "networkSecurityGroupName":{
            "value":"[variables('names').networkSecurityGroup]"
          },
          "nsgResourceAPIVersion": {
            "value": "[variables('resourceAPIVersions').networkSecurityGroups]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
      }
    }
  ]
}
